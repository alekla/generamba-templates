import UIKit

final class {{ module_info.name }}ViewController: UIViewController {
	struct ViewConfig {
	}

	private let viewModel: {{ module_info.name }}ViewModelProtocol
    private let viewConfig: ViewConfig

	// MARK: - Initialization

    
    init(
		viewModel: {{ module_info.name }}ViewModelProtocol,
        viewConfig: ViewConfig = .defaultConfig
	) {
        self.viewModel = viewModel
        self.viewConfig = viewConfig

        super.init(nibName: nil, bundle: nil)
    }

	@available(*, unavailable)
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

	// MARK: - Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
    }
}

// MARK: - Default config

extension {{ module_info.name }}ViewController.ViewConfig {
    static var defaultConfig: {{ module_info.name }}ViewController.ViewConfig {
		{{ module_info.name }}ViewController.ViewConfig()
    }
}